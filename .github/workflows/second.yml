# This workflow will build a package using Maven and then publish it to GitHub packages when a release is created
# For more information see: https://github.com/actions/setup-java/blob/main/docs/advanced-usage.md#apache-maven-with-a-settings-path

name: Maven Package

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - uses: actions/checkout@v4


      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          server-id: github
          settings-path: ${{ github.workspace }}/settings.xml

      - name: Remove or Rename existing settings.xml directory
        run: |
          rm -rf ${{ github.workspace }}/settings.xml  # Törlés
          # mv ${{ github.workspace }}/settings.xml ${{ github.workspace }}/settings_xml_backup 

     

      - name: Generate settings.xml
        run: |
          cat << 'EOF' > ${{ github.workspace }}/settings.xml
          <settings xmlns="http://maven.apache.org/SETTINGS/1.0.0"
                    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                    xsi:schemaLocation="http://maven.apache.org/SETTINGS/1.0.0
                                        http://maven.apache.org/xsd/settings-1.0.0.xsd">
            <servers>
              <server>
                <id>github</id>
                <username>${{ github.actor }}</username>
                <password>${{ secrets.GITHUB_TOKEN }}</password>
              </server>
            </servers>
            <repositories>
              <repository>
                <id>github</id>
                <name>GitHub Apache Maven Snapshot Packages</name>
                <url>https://maven.pkg.github.com/assassino1792/DocAssist</url>
              </repository>
            </repositories>
          </settings>
          EOF
      

      - name: Build with Maven
        run: mvn -B clean install --file DocAssist/pom.xml -s ${{ github.workspace }}/settings.xml

      - name: List Workspace Directory
        run: |
            echo "The workspace directory is ${{ github.workspace }}"
            ls -la ${{ github.workspace }}

      - name: Build Docker image
        run: docker build -t docker.pkg.github.com/assassino1792/docassist:latest .
        working-directory: ${{ github.workspace }}/DocAssist



      - name: Log in to GitHub Packages Docker registry
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login docker.pkg.github.com -u "${{ github.actor }}" --password-stdin

      - name: Push Docker image to GitHub Packages
        run: docker push docker.pkg.github.com/assassino1792/docassist:latest
        working-directory: ${{ github.workspace }}/DocAssist



      - name: Deploy to GitHub Packages
        run: mvn -B deploy --file DocAssist/pom.xml -s ${{ github.workspace }}/settings.xml
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}



